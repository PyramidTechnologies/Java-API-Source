apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'

group='com.pyramidacceptors'
archivesBaseName = "jPyramid-RS-232"

sourceCompatibility = 1.7
version = new Version(major: 1, minor: 3, revision: 0).toString()


task version() {
    println version
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

//create a single Jar with all dependencies
task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'jPyramid-RS-232',
                'Implementation-Version': version
    }
    baseName = project.name
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")
boolean hasCredentials = hasProperty('ossrhUsername') && hasProperty('ossrhPassword')

signing {
    required { isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

class Version {
    int major, minor, revision
    String toString() {
        "$major.$minor.$revision"
    }
}

test {
    // Exclude any optional tests
    exclude 'com/pyramidacceptors/ptalk/api/**_Optional.*'
}

uploadArchives {
    configuration = configurations.archives

    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                if (hasCredentials) {
                    authentication(userName: getProperty('ossrhUsername'), password: getProperty('ossrhPassword'))
                }
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                if (hasCredentials) {
                    authentication(userName: getProperty('ossrhUsername'), password: getProperty('ossrhPassword'))
                }
            }

            pom.project {
                name 'jPyramid-RS-232'
                packaging 'jar'
                description 'RS-232 Bill Validator API'
                url 'https://github.com/PyramidTechnologies/jPyramid-RS-232'

                scm {
                    url 'https://github.com/PyramidTechnologies/jPyramid-RS-232'
                    connection 'scm:git://github.com/PyramidTechnologies/jPyramid-RS-232.git'
                    developerConnection 'scm:git://github.com/PyramidTechnologies/jPyramid-RS-232.git'
                }

                licenses {
                    license {
                        name 'MIT License'
                        url 'https://pti.mit-license.org/'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'corytodd'
                        name 'Cory Todd'
                        email 'cory@pyramidacceptors.com'
                    }
                }

                organization {
                    name 'Pyramid Technologies'
                    url 'http://pyramidacceptors.com/'
                }

                issueManagement {
                    system 'GitHub Issues'
                    url 'https://github.com/PyramidTechnologies/jPyramid-RS-232/issues'
                }

            }
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testCompile (group: 'junit', name: 'junit', version: '4.5'){
        exclude module : 'hamcrest'
        exclude module : 'hamcrest-core'
    }
    testCompile 'org.hamcrest:hamcrest-library:1.2.1'
    testCompile 'com.google.guava:guava:24.1.1-jre'
    testCompile ('org.mockito:mockito-all:2.0.2-beta') {
        exclude module : 'hamcrest'
        exclude module : 'hamcrest-core'
    }
    compile 'org.scream3r:jssc:2.8.0'
    compile 'org.slf4j:slf4j-api:1.7.21'
}